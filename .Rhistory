resp <- GET(sprintf("https://api.spotify.com/v1/recommendations/available-genre-seeds", input$energy, input$popularity),
add_headers(Authorization = sprintf("Bearer %s", ShinyMakeGAProfileTable())))
c <- content(resp)
resp <- GET("https://api.spotify.com/v1/recommendations/available-genre-seeds",
add_headers(Authorization = sprintf("Bearer %s", ShinyMakeGAProfileTable())))
c <- content(resp)
runApp()
runApp()
runApp(port=6423)
runApp()
runApp()
runApp(port=6423)
runApp()
runApp()
runApp()
runApp()
runApp(port=6423)
runApp()
runApp(port=6423)
runApp()
runApp(port=6423)
runApp()
runApp(port=6423)
as.list(pitch)
list(pitch)
p <- list(pitch$integer)
p
names(p) <- pitch$pitch
length(pitch$pitch)
length(pitch$integer)
p <- c(pitch$integer)
p
p <- as.list(pitch$integer)
p
names(p) <- pitch$pitch
p
runApp()
runApp(port=6423)
runApp(port=6423)
search.cat <- function(name, value = 0, min = 0, max = 1, step = .1) {
fluidRow(
checkboxInput(sprintf("%s.on", tolower(name)), name, value = FALSE),
conditionalPanel(condition = sprintf("%s.on", tolower(name)),
numericInput(tolower(name), NA, value = value, min = min, max = max, step = step)
)
)
}
search.cat("Energy")
runApp(port=6423)
search.cat <- function(name, value = 0, min = 0, max = 1, step = .1) {
fluidRow(
checkboxInput(sprintf("%s.on", tolower(name)), name, value = FALSE),
conditionalPanel(condition = sprintf("%s.on == true", tolower(name)),
numericInput(tolower(name), NA, value = value, min = min, max = max, step = step)
)
)
}
search.cat("Energy")
search.cat("Energy")
runApp(port=6423)
runApp()
runApp(port=6423)
runApp()
runApp(port=6423)
runApp(port=6423)
runApp(port=6423)
?conditionalPanel
runApp(port=6423)
>?numericInput
\?numericInput
?numericInput
runApp()
url <- "https://api.spotify.com/v1/recommendations?seed_artists=4NHQUGzhtTLFvgF5SZesLK"
paste0(url, sprintf("&min_energy=%s", 5), collapse = "")
runApp()
runApp(port=6423)
runApp(port=6423)
strsplit("energy.on", split = ".on")
as.character(strsplit("energy.on", split = ".on"))
runApp(port=6423)
runApp(port=6423)
runApp()
?checkboxGroupInput
runApp()
runApp(port=6423)
runApp(port=6423)
runApp()
runApp(port=6423)
runApp()
runApp(port=6423)
runApp(port=6423)
stonesthrow <- "https://www.stonesthrow.com/catalog"
GET(stonesthrow)
parseHTML(GET(stonesthrow))
library(xml2)
parseHTML(GET(stonesthrow))
library(XML)
parseHTML(GET(stonesthrow))
htmlParse(GET(stonesthrow))
htmlParse(GET(stonesthrow))$TABKE
htmlParse(GET(stonesthrow))$table
getNodeSet(htmlParse(GET(stonesthrow)), "/table")
getNodeSet(htmlParse(GET(stonesthrow)), "./table")
getNodeSet(htmlParse(GET(stonesthrow)), ".//table")
getNodeSet(htmlParse(GET(stonesthrow)), "//table")
stonesthrowdata <- getNodeSet(htmlParse(GET(stonesthrow)), "//table")
stonesthrowdata
htmlParse(stonesthrowdata)
getNodeSet(stonesthrowdata, "//tr")
getNodeSet(htmlParse(stonesthrowdata), "//tr")
getNodeSet(htmlParse(stonesthrowdata), ".//tr")
getNodeSet(htmlParse(stonesthrowdata), ".//td")
getNodeSet(htmlParse(stonesthrowdata), "//td")
getNodeSet(htmlParse(stonesthrowdata), "/td")
getNodeSet(htmlParse(stonesthrowdata), "td")
str(stonesthrowdata)
stonesthrowdata[[1]]
htmlParse(stonesthrowdata[[1]])
getNodeSet(stonesthrowdata[[1]], "//tr")
stonesthrowdata <- getNodeSet(stonesthrowdata[[1]], "//tr")
str(stonesthrowdata)
lapply(stonesthrowdata, function(x) getNodeSet(x[[1]], "//td"))
stonesthrowdata[[1]]
stonesthrowdata[[2]]
stonesthrowdata[[3]]
stonesthrowdata[[3]][[1]]
lapply(stonesthrowdata[[1]], function(x) getNodeSet(x[[1]], "//td"))
lapply(stonesthrowdata[[1]], function(x) getNodeSet(x[[1]], "//td")))
lapply(stonesthrowdata[[1]], function(x) getNodeSet(x[[1]], "//td"))
lapply(stonesthrowdata[[3:4]], function(x) getNodeSet(x[[1]], "//td"))
lapply(1:length(stonesthrowdata), function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
lapply(stonesthrowdata[[3:4]], function(x) getNodeSet(x[[1]], "//td"))
lapply(3:4, function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
lapply(3:4, function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
stonesthrowdata[[3]][[1]]
htmlParse(stonesthrowdata[[3]][[1]])
getNodeSet(stonesthrowdata[[3]][[1]], "//td")
lapply(3:4, function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
lapply(c(3,5), function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
lapply(6, function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
length(stonesthrowdata)
c(1:491)
c(1:491) %% 2
which(c(1:491) %% 2 == 1)
lapply(which(c(1:491) %% 2 == 1), function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
stdata <- lapply(which(c(1:491) %% 2 == 1), function(x) getNodeSet(stonesthrowdata[[x]][[1]], "//td"))
stdata[1]
stdata[[1]][[1]]
stdata[[1]][[2]]
stonesthrowdata <- getNodeSet(htmlParse(GET(stonesthrow)), "//table")
stonesthrowdata[[2]]
stonesthrowdata[[1]]
stonesthrowdata[1]
stonesthrowdata[2]
stonesthrowdata <- getNodeSet(htmlParse(GET(stonesthrow)), "//div[@class='catalog']/")
getNodeSet(htmlParse(GET(stonesthrow)), "//div[@class='catalog']")
getNodeSet(htmlParse(GET(stonesthrow)), "//div[@id='catalog']")
getNodeSet(htmlParse(GET(stonesthrow)), "//div[@id='catalog']")
getNodeSet(htmlParse(GET(stonesthrow)), "//table[@class='fd-table-1']")
getNodeSet(htmlParse(GET(stonesthrow)), "//table[@id='fd-table-1']")
getNodeSet(htmlParse(GET(stonesthrow)), "//tr[@style='display: none;']")
getNodeSet(htmlParse(GET(stonesthrow)), "/tr[@style='display: none;']")
getNodeSet(htmlParse(GET(stonesthrow)), "./tr[@style='display: none;']")
getNodeSet(htmlParse(GET(stonesthrow)), ".//tr[@style='display: none;']")
getNodeSet(htmlParse(GET(stonesthrow)), "//tr[@style='display: none;']")
getNodeSet(htmlParse(GET(stonesthrow)), //tr[@style='display: none;']")
getNodeSet(htmlParse(GET(stonesthrow)), '//tr[@style="display: none;"]')
getNodeSet(htmlParse(GET(stonesthrow)), '@style="display: none;"')
getNodeSet(htmlParse(GET(stonesthrow)), '//td')
getNodeSet(htmlParse(GET(stonesthrow)), 'tr/td')
getNodeSet(htmlParse(GET(stonesthrow)), '//td')[[1]]
?htmlParse
stonesthrowdata <- xmlTreeParse(stonesthrow, asText = TRUE)
stonesthrowdata <- htmlTreeParse(stonesthrow, encoding = "UTF-8")
stonesthrowdata <- htmlTreeParse(stonesthrow)
stonesthrowdata <- xmlTreeParse(stonesthrow, asText = TRUE, isHTML = TRUE)
stonesthrowdata
stonesthrowdata$children
stonesthrowdata <- xmlTreeParse(GET(stonesthrow), asText = TRUE, isHTML = TRUE)
stonesthrowdata
str(stonesthrowdata)
stonesthrowdata$children$html$body
stonesthrowdata$children$html
str(stonesthrowdata$children$html)
str(stonesthrowdata$children$html$head)
str(stonesthrowdata$children$html[[1]])
str(stonesthrowdata$children$html[[2]]$div)
str(stonesthrowdata$children$html[[2]]$div[[1]])
str(stonesthrowdata$children$html[[2]]$div[1])
str(stonesthrowdata$children$html[[2]]$div)
str(stonesthrowdata$children$html[[2]])
stonesthrowdata <- xmlTreeParse(GET(stonesthrow), asTree = TRUE, isHTML = TRUE)
stonesthrowdata
stonesthrowdata$children
stonesthrowdata$children$html$body
stonesthrowdata$children$html
htmlParse(stonesthrowdata$children$html)
getNodeSet(stonesthrowdata$children$html, "//td")
?htmlParse
doc <- xmlTreeParse(GET(stonesthrow),  handlers = (function() {
vars <- character(0) ;
list(variable=function(x, attrs) {
vars <<- c(vars, xmlValue(x[[1]]));
NULL},
startElement=function(x,attr){
NULL
},
names = function() {
vars
}
)
})()
)
doc <- xmlTreeParse(GET(stonesthrow),  handlers = (function() {
vars <- character(0) ;
list(td=function(x, attrs) {
vars <<- c(vars, xmlValue(x[[1]]));
NULL},
startElement=function(x,attr){
NULL
},
names = function() {
vars
}
)
})()
)
doc
doc <- htmlTreeParse(GET(stonesthrow),  handlers = (function() {
vars <- character(0) ;
list(td=function(x, attrs) {
vars <<- c(vars, xmlValue(x[[1]]));
NULL},
startElement=function(x,attr){
NULL
},
names = function() {
vars
}
)
})()
)
doc <- htmlParse(GET(stonesthrow),  handlers = (function() {
vars <- character(0) ;
list(td=function(x, attrs) {
vars <<- c(vars, xmlValue(x[[1]]));
NULL},
startElement=function(x,attr){
NULL
},
names = function() {
vars
}
)
})()
)
doc
htmlParse(stonesthrow, asText = TRUE)
doc <- htmlParse(stonesthrow, asText = TRUE)
sapply(getNodeSet(doc, "//TD"), xmlValue)
sapply(getNodeSet(doc, "//td"), xmlValue)
sapply(getNodeSet(doc, "//tr"), xmlValue)
doc
doc[[1]]
getNodeSet(doc, "//td")
getNodeSet(doc, "/td")
getNodeSet(doc, ".//td")
getNodeSet(doc, "./td")
getNodeSet(doc, "/table)
getNodeSet(doc, "/table")
getNodeSet(doc, "//table")
getNodeSet(xmlRoot(doc), "//table")
xmlRoot(doc)
doc
doc <- htmlParse(stonesthrow, isHTML = TRUE)
doc
GET(stonesthrow)
content(GET(stonesthrow))
doc <- content(GET(stonesthrow))
doc$doc
doc[[2]]
doc[[1]]
doc[1]
doc[2]
htmlParse(doc)
htmlParse(doc, isHTML = TRUE)
htmlParse(doc, asText = TRUE)
getNodeSet(htmlParse(doc), "//td")
sapply(getNodeSet(htmlParse(doc), "//td"),xmlValue)
data <- ]sapply(getNodeSet(htmlParse(doc), "//td"),xmlValue)
data <- sapply(getNodeSet(htmlParse(doc), "//td"),xmlValue)
data[1]
data[50]
data[2
]
data[10]
data[8]
data[9]
data[9:14]
data[15:21]
data[15:20]
data <- data[9:2900]
2892/6
seq(1:2892, by = 5)
seq(1, 2892, by = 5)
seq(1, 2892, by = 6)
data[2887]
data[seq(1, 2892, by = 6)]
year <- data[seq(1, 2892, by = 6)]
stonesthrow <- data.frame(year = data[seq(1, 2892, by = 6)], artist = data[seq(2, 2892, by = 6)], title = data[seq(3, 2892, by = 6)], data[seq(1, 2892, by = 6)], label = data[seq(4, 2892, by = 6)], format = data[seq(5, 2892, by = 6)], cat.no = data[seq(6, 2892, by = 6)])
View(stonesthrow)
stonesthrow <- data.frame(year = data[seq(1, 2892, by = 6)], artist = data[seq(2, 2892, by = 6)], title = data[seq(3, 2892, by = 6)], label = data[seq(4, 2892, by = 6)], format = data[seq(5, 2892, by = 6)], cat.no = data[seq(6, 2892, by = 6)])
unique(stonesthrow$artist)
runApp()
?runApp
?getOption("shiny.port")
\getOption("shiny.port")
getOption("shiny.port")
options(shiny.port = 6423)
runApp()
runApp()
runApp()
runApp()
runApp()
labels <- content(GET("https://labelsbase.net/labels?page=2"))
sapply(getNodeSet(htmlParse(doc), "//div[@class='row']")
)
sapply(getNodeSet(htmlParse(doc), "//div[@class='row']"), xmlValue)
sapply(getNodeSet(htmlParse(doc), "/div[@class='row']"), xmlValue)
sapply(getNodeSet(htmlParse(doc), "//div"), xmlValue)
sapply(getNodeSet(htmlParse(doc), "//div"), xmlValue)[1]
sapply(getNodeSet(htmlParse(doc), "//div"), xmlValue)[2]
labels <- content(GET("https://labelsbase.net/labels?page=2"))
labels <- sapply(getNodeSet(htmlParse(labels), "//div"), xmlValue)
labels
labels[1]
labels[[1]
]
labels[[2]]
labels[[3]]
labels[[4]]
labels[[25]]
labels[[45]]
labels[[40]]
labels[[55]]
sapply(getNodeSet(htmlParse(doc), "//div[contains(class, 'row')"), xmlValue)
sapply(getNodeSet(htmlParse(labels), "//div[contains(class, 'row')"), xmlValue)
labels <- content(GET("https://labelsbase.net/labels?page=2"))
sapply(getNodeSet(htmlParse(labels), "//div[contains(class, 'row')"), xmlValue)
sapply(getNodeSet(htmlParse(labels), "/div[contains(class, 'row')"), xmlValue)
sapply(getNodeSet(labels, "//div[contains(class, 'row')"), xmlValue)
sapply(getNodeSet(root(labels), "//div[contains(class, 'row')"), xmlValue)
??XML
labels <- sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//div"), xmlValue)
labels
labels <- content(GET("https://labelsbase.net/labels?page=2"))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//div[contains(class, 'row')]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "/div[contains(class, 'row')]"), xmlValue)
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(labels)), ".//div[contains(class, 'row')]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), ".//div[contains(@class, 'row')]"), xmlValue)
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(labels)), ".//div[contains(normalize-space(@class), 'row')]"), xmlValue)
labeldata
sapply(getNodeSet(xmlRoot(htmlParse(labels)), ".//div[contains(normalize-space(@class), 'label-item')]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//div[contains(normalize-space(@class), 'label-item')]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "/div[contains(normalize-space(@class), 'label-item')]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//a[@title]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), ".//a[@title]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//a[title]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//div[contains(normalize-space(@class), 'label-item')]/div/a[@title]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//div[contains(normalize-space(@class), 'label-item')]/div/a[contains(@title)]"), xmlValue)
sapply(getNodeSet(xmlRoot(htmlParse(labels)), "//div[contains(normalize-space(@class), 'label-item')]/div/a"), xmlValue)
get.label.page(page) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", page)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
length(labeldata)[which(length(labeldata) %% 2 == 0)]
}
get.label.page(page) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", page)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((length(labeldata) %% 2) == 0)]
}
get.label.page <- function(page) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", page)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((length(labeldata) %% 2) == 0)]
}
get.label.page(1)
get.label.page(2)
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", 2)))
doc
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((length(labeldata) %% 2) == 0)]
get.label.page <- function(page) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", 2)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
}
get.label.page(2)
get.label.page(1)
get.label.page(3)
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", 3)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
sapply(1:332, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
})
sapply(1:2, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
})
lapply(1:2, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
})
lapply(1:2, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
})
unlist(lapply(1:2, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
}))
unlist(lapply(1:2, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@title), 'Genres')]"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
}))
unlist(lapply(1:2, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
labeldata <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//small[contains(normalize-space(@title), 'Genres')]"),
xmlValue)
labeldata[which((1:length(labeldata) %% 2) == 0)]
}))
unlist(lapply(1:332, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
label <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
label <- label[which((1:length(labeldata) %% 2) == 0)]
genre <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//small[contains(normalize-space(@title), 'Genres')]"),
xmlValue)
genre <- genre[which((1:length(genre) %% 2) == 0)]
data.frame(label, genre)
}))
lapply(1, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
label <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
label <- label[which((1:length(labeldata) %% 2) == 0)]
genre <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//small[contains(normalize-space(@title), 'Genres')]"),
xmlValue)
genre <- genre[which((1:length(genre) %% 2) == 0)]
data.frame(label, genre)
})
genre <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//small[contains(normalize-space(@title), 'Genres')]"),
xmlValue)
genre
genre[which((1:length(genre) %% 2) == 0)]
genre <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//small[contains(normalize-space(@title), 'Genres')]/b"),
xmlValue)
genre <- genre[which((1:length(genre) %% 2) == 0)]
genre
sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//small[contains(normalize-space(@title), 'Genres')]/b"),
xmlValue)
lapply(1, function(x) {
doc <- content(GET(sprintf("https://labelsbase.net/labels?page=%s", x)))
label <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//div[contains(normalize-space(@class), 'label-item')]/div/a"),
xmlValue)
label <- label[which((1:length(labeldata) %% 2) == 0)]
genre <- sapply(getNodeSet(xmlRoot(htmlParse(doc)),
"//small[contains(normalize-space(@title), 'Genres')]/b"),
xmlValue)
data.frame(label, genre)
})
